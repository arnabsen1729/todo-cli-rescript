// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Os = require("os");
var Utils = require("./utils.bs.js");
var Belt_Int = require("bs-platform/lib/js/belt_Int.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var FileHandling = require("./fileHandling.bs.js");

function cmdLs(pendingTodosFile) {
  var todos = FileHandling.readTodos(pendingTodosFile);
  if (todos.length === 0) {
    console.log("There are no pending todos!");
    return ;
  }
  var parsedTodos = Belt_Array.reverse(Belt_Array.mapWithIndex(todos, (function (index, todo) {
              return "[" + String(index + 1 | 0) + "] " + todo;
            })));
  console.log(parsedTodos.join(Os.EOL));
  
}

function cmdAddTodo(newTodos, pendingTodosFile) {
  if (newTodos.length === 0) {
    console.log("Error: Missing todo string. Nothing added!");
  } else {
    FileHandling.updateFile(pendingTodosFile, (function (todos) {
            return Belt_Array.concat(todos, newTodos);
          }));
    console.log("Added todo: \"" + newTodos.join("\",\"") + "\"");
  }
  
}

function cmdDelTodo(todoIds, pendingTodosFile) {
  if (todoIds.length === 0) {
    console.log("Error: Missing NUMBER for deleting todo.");
    return ;
  } else {
    return Belt_Array.forEach(todoIds, (function (id) {
                  var number = Belt_Int.fromString(id);
                  if (number !== undefined) {
                    return FileHandling.updateFile(pendingTodosFile, (function (todos) {
                                  if (number < 1 || number > todos.length) {
                                    console.log("Error: todo #" + String(number) + " does not exist. Nothing deleted.");
                                    return todos;
                                  } else {
                                    console.log("Deleted todo #" + String(number));
                                    return Utils.deleteItem(todos, number - 1 | 0);
                                  }
                                }));
                  } else {
                    console.log("Error: todo #" + id + " does not exist. Nothing deleted.");
                    return ;
                  }
                }));
  }
}

function cmdDoneTodo(todoIds, pendingTodosFile, completedTodosFile) {
  if (todoIds.length === 0) {
    console.log("Error: Missing NUMBER for marking todo as done.");
    return ;
  } else {
    return Belt_Array.forEach(todoIds, (function (id) {
                  var number = Belt_Int.fromString(id);
                  if (number !== undefined) {
                    var todos = FileHandling.readTodos(pendingTodosFile);
                    if (number < 1 || number > todos.length) {
                      console.log("Error: todo #" + String(number) + " does not exist.");
                      return ;
                    }
                    var completedTodo = Caml_array.get(todos, number - 1 | 0);
                    FileHandling.writeTodos(pendingTodosFile, Utils.deleteItem(todos, number - 1 | 0));
                    FileHandling.appendTodos(completedTodosFile, completedTodo);
                    console.log("Marked todo #" + String(number) + " as done.");
                    return ;
                  }
                  console.log("Error: todo #" + id + " does not exist. ");
                  
                }));
  }
}

function cmdReport(pendingTodosFile, completedTodosFile) {
  var pending = FileHandling.readTodos(pendingTodosFile).length;
  var completed = FileHandling.readTodos(completedTodosFile).length;
  console.log(Utils.getToday(undefined) + " Pending : " + String(pending) + " Completed : " + String(completed));
  
}

function cmdHelp(help) {
  console.log(help);
  
}

exports.cmdLs = cmdLs;
exports.cmdAddTodo = cmdAddTodo;
exports.cmdDelTodo = cmdDelTodo;
exports.cmdDoneTodo = cmdDoneTodo;
exports.cmdReport = cmdReport;
exports.cmdHelp = cmdHelp;
/* os Not a pure module */
